# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

  # group: ${{ github.workflow }}-${{ github.ref }}
  # cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
                
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          cache: 'pip'
  
      - name: install python dependencies
        run: pip3 install bibtexparser==2.0.0b3 pelican-search markdown requests BeautifulSoup4
      
      - name: install stork
        uses: taiki-e/cache-cargo-install-action@v1
        with:
          tool: stork-search
  
      - name: GITHUB CONTEXT
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
  
# Error: Unable to process command '::set-env name=commitmsg::Update static.yml' successfully.
# Error: The `set-env` command is disabled. Please upgrade to using Environment Files or opt into unsecure command execution by setting the `ACTIONS_ALLOW_UNSECURE_COMMANDS` environment variable to `true`. For more information see: https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/

      # - name: get commit message
      #   run: |
      #      echo ::set-env name=commitmsg::$(git log --format=%B -n 1 ${{ github.event.after }})
      # - name: show commit message    
      #   run : echo $commitmsg

      - name: Compute free space (1)
        run: df -h

      - name: Free up space
        run: >-
          sudo rm -rf /usr/share/dotnet;
          sudo rm -rf /opt/ghc;
          sudo rm -rf "/usr/local/share/boost";
          sudo rm -rf /home/runner/.cache
          # this is necessary to build things (e.g., python libraries)
          # rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: list tools dir
        run: ls -l "$AGENT_TOOLSDIRECTORY"

      - name: list dir
        run: cwd && du -hs

      - name: Compute free space (2)
        run: df -h

      - name: build website
        run: set -o xtrace && ./build.sh

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Commit main repo
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: update main repo
