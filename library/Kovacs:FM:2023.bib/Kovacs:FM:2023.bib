
@InProceedings{   kovacs:fm:2023,
  abstract      = {We describe applications of symbolic computation towards automating the formal analysis of while-programs implementing polynomial arithmetic. We combine methods from static analysis, symbolic summation and computer algebra to derive polynomial loop invariants, yielding a finite representation of all polynomial equations that are valid before and after each loop execution. While deriving polynomial invariants is in general undecidable, we identify classes of loops for which we automatically can solve the problem of invariant synthesis. We further generalize our work to the analysis of probabilistic program loops. Doing so, we compute higher-order statistical moments over (random) program variables, inferring this way quantitative invariants of probabilistic program loops. Our results yield computer-aided solutions in support of formal software verification, compiler optimization, and probabilistic reasoning.},
  address       = {Cham},
  author        = {Kov{\'a}cs, Laura},
  booktitle     = {Formal Methods},
  date-added    = {2023-08-03 11:20:33 +0200},
  date-modified = {2023-08-03 11:21:50 +0200},
  editor        = {Chechik, Marsha and Katoen, Joost-Pieter and Leucker, Martin},
  isbn          = {978-3-031-27481-7},
  pages         = {3--9},
  publisher     = {Springer International Publishing},
  title         = {Symbolic Computation in Automated Program Reasoning},
  year          = {2023}
}
