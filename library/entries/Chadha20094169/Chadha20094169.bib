@article{Chadha20094169,
	Abstract = {Asynchronous programming is a paradigm that supports asynchronous function calls in addition to synchronous function calls. Programs in such a setting can be modeled by automata with counters that keep track of the number of pending asynchronous calls for each function, as well as a call stack for synchronous recursive computation. These programs have the restriction that an asynchronous call is processed only when the call stack is empty. The decidability of the control state reachability problem for such systems was recently established. In this paper, we consider the problems of checking other branching time properties for such systems. Specifically we consider the following problems --- termination, which asks if there is an infinite (non-terminating) computation exhibited by the system; control state maintainability, which asks if there is a maximal execution of the system, where all the state visited lie in some ``good'' set; whether the system can be simulated by a given finite state system; and whether the system can simulate a given finite state system. We present decision algorithms for all these problems.},
	Author = {Chadha, Rohit and Viswanathan, Mahesh},
	File = {Deciding branching time properties for asynchronous programs - Chadha, Viswanathan (0) (0) - a - a - y.pdf},
	ISSN = {0304-3975},
	Journal = {Theoretical Computer Science},
	Keywords = {Model checking},
	Number = {42},
	Pages = {4169 - 4179},
	Title = {Deciding branching time properties for asynchronous programs},
	URL = {http://www.sciencedirect.com/science/article/pii/S0304397509000851},
	Volume = {410},
	Year = {2009},
	bdsk-url-1 = {http://www.sciencedirect.com/science/article/pii/S0304397509000851},
	bdsk-url-2 = {http://dx.doi.org/10.1016/j.tcs.2009.01.021},
	date-added = {2015-10-14 07:37:10 +0000},
	date-modified = {2015-10-14 07:37:10 +0000},
	doi = {10.1016/j.tcs.2009.01.021}
}
