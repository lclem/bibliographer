@inproceedings{10.1007/978-3-319-89366-2_31,
	Author = {Genet, Thomas and Haudebourg, Timoth{\'e}e and Jensen, Thomas},
	Editor = {Baier, Christel and Dal Lago, Ugo},
	Abstract = {This paper describes a fully automatic technique for verifying safety properties of higher-order functional programs. Tree automata are used to represent sets of reachable states and functional programs are modeled using term rewriting systems. From a tree automaton representing the initial state, a completion algorithm iteratively computes an automaton which over-approximates the output set of the program to verify. We identify a subclass of higher-order functional programs for which the completion is guaranteed to terminate. Precision and termination are obtained conjointly by a careful choice of equations between terms. The verification objective can be used to generate sets of equations automatically. Our experiments show that tree automata are sufficiently expressive to prove intricate safety properties and sufficiently simple for the verification result to be certified in Coq.},
	Address = {Cham},
	BookTitle = {Foundations of Software Science and Computation Structures},
	date-added = {2019-05-08 09:52:37 +0200},
	date-modified = {2019-05-08 09:56:34 +0200},
	ISBN = {978-3-319-89366-2},
	Keywords = {citesme! and readme},
	Pages = {565--582},
	Publisher = {Springer International Publishing},
	Title = {Verifying Higher-Order Functions with Tree Automata},
	Year = {2018},
	File = {Genet2018\_Chapter\_VerifyingHigher-OrderFunctions (0) (0) - a - a - j.pdf},
	doi = {https://dx.doi.org/10.1007/978-3-319-89366-2_31}
}
