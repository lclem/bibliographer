@inproceedings{10.1007/978-3-319-89960-2_20,
	Abstract = {We propose a method for automatically finding refinement types of higher-order function programs. Our method is an extension of the Ice framework of Garg et al. for finding invariants. In addition to the usual positive and negative samples in machine learning, their Ice framework uses implication constraints, which consist of pairs (x, y) such that if x satisfies an invariant, so does y. From these constraints, Ice infers inductive invariants effectively. We observe that the implication constraints in the original Ice framework are not suitable for finding invariants of recursive functions with multiple function calls. We thus generalize the implication constraints to those of the form {\$}{\$}({\backslash}{\{}x{\\_}1,{\backslash}dots ,x{\\_}k{\backslash}{\}}, y){\$}{\$} ( {\{} x 1 , ⋯ , x k {\}} , y ) , which means that if all of {\$}{\$}x{\\_}1,{\backslash}dots ,x{\\_}k{\$}{\$} x 1 , ⋯ , x k satisfy an invariant, so does y. We extend their algorithms for inferring likely invariants from samples, verifying the inferred invariants, and generating new samples. We have implemented our method and confirmed its effectiveness through experiments.},
	Address = {Cham},
	Author = {Champion, Adrien and Chiba, Tomoya and Kobayashi, Naoki and Sato, Ryosuke},
	BookTitle = {Tools and Algorithms for the Construction and Analysis of Systems},
	Editor = {Beyer, Dirk and Huisman, Marieke},
	File = {ICE-Based\_Refinement\_Type\_Discovery\_for\_Higher-Ord (0) - a - a - z.pdf},
	ISBN = {978-3-319-89960-2},
	Pages = {365--384},
	Publisher = {Springer International Publishing},
	Title = {ICE-Based Refinement Type Discovery for Higher-Order Functional Programs},
	Year = {2018},
	date-added = {2018-06-21 12:34:28 +0000},
	date-modified = {2018-06-21 12:34:28 +0000},
	doi = {10.1007/978-3-319-89960-2_20}
}
