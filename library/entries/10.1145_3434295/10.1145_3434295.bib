
@Article{         10.1145/3434295,
  Author        = "Benedikt, Michael and Pradic, Pierre",
  Abstract      = "Nested relations, built up from atomic types via product and set types, form a rich data model. Over the last decades the nested relational calculus, NRC, has emerged as a standard language for defining transformations on nested collections. NRC is a strongly-typed functional language which allows building up transformations using tupling and projections, a singleton-former, and a map operation that lifts transformations on tuples to transformations on sets. In this work we describe an alternative declarative method of describing transformations in logic. A formula with distinguished inputs and outputs gives an implicit definition if one can prove that for each input there is only one output that satisfies it. Our main result shows that one can synthesize transformations from proofs that a formula provides an implicit definition, where the proof is in an intuitionistic calculus that captures a natural style of reasoning about nested collections. Our polynomial time synthesis procedure is based on an analog of Craig's interpolation lemma, starting with a provable containment between terms representing nested collections and generating an NRC expression that interpolates between them. We further show that NRC expressions that implement an implicit definition can be found when there is a classical proof of functionality, not just when there is an intuitionistic one. That is, whenever a formula implicitly defines a transformation, there is an NRC expression that implements it.",
  Address       = "New York, NY, USA",
  articleno     = "14",
  date-added    = "2021-01-05 10:53:50 +0100",
  date-modified = "2021-01-05 10:53:50 +0100",
  DOI           = "10.1145/3434295",
  issue_date    = "January 2021",
  Journal       = "Proc. ACM Program. Lang.",
  Keywords      = "proofs, synthesis, nested collections",
  Month         = "January",
  Number        = "POPL",
  numpages      = "28",
  Publisher     = "Association for Computing Machinery",
  Title         = "Generating Collection Transformations from Proofs",
  URL           = "https://doi.org/10.1145/3434295",
  Volume        = "5",
  Year          = "2021",
  bdsk-url-1    = "https://doi.org/10.1145/3434295",
  File          = "Generating collection transformations from proofs - 3434295 - a - r.pdf"
}
