@article{Hindley01042008,
	Abstract = {This article is essentially an extended review with historical comments. It looks at an algorithm published in 1943 by M. H. A. Newman, which decides whether a lambda-calculus term is typable without actually computing its principal type. Newman's algorithm seems to have been completely neglected by the type-theorists who invented their own rather different typability algorithms over 15 years later.},
	Author = {Hindley, J. Roger},
	EPrint = {http://logcom.oxfordjournals.org/content/18/2/229.full.pdf+html},
	File = {M. H. Newman's Typability Algorithm for Lambda-calculus - Hindley (0) (0) - a - a - y.pdf},
	Journal = {Journal of Logic and Computation},
	Keywords = {type theory and type checking},
	Number = {2},
	Pages = {229-238},
	Title = {M. H. Newman's Typability Algorithm for Lambda-calculus},
	URL = {http://logcom.oxfordjournals.org/content/18/2/229.abstract},
	Volume = {18},
	Year = {2008},
	bdsk-url-1 = {http://logcom.oxfordjournals.org/content/18/2/229.abstract},
	bdsk-url-2 = {http://dx.doi.org/10.1093/logcom/exm001},
	date-added = {2013-05-02 17:51:14 +0000},
	date-modified = {2013-05-02 17:51:22 +0000},
	file-2 = {M. H. Newman's Typability Algorithm for Lambda-calculus - Hindley (1) (0) - a - a - y.pdf},
	doi = {10.1093/logcom/exm001}
}
