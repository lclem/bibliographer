
@Conference{      24f3688482624633acedd41684a008d2,
  Author        = "Lindley, Sam",
  Abstract      = "We give a Haskell implementation of Filinski{\textquoteright}s normalisation by evaluation algorithm for the computational lambda-calculus with sums. Taking advantage of extensions to the GHC compiler, our implementation represents objectlanguage types as Haskell types and ensures that type errors are detected statically.Following Filinski, the implementation is parameterised over a residualising monad. The standard residualising monad for sums is a continuation monad. Defunctionalising the uses of the continuation monad we present the bindingtree monad as an alternative.",
  date-added    = "2020-09-12 08:33:26 +0200",
  date-modified = "2020-09-12 08:33:26 +0200",
  Language      = "English",
  Note          = "2009 Workshop on Normalization by Evaluation ; Conference date: 15-08-2009 Through 15-08-2009",
  Title         = "Accumulating bindings",
  Year          = "2009"
}
