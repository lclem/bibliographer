Incomplete information is ubiquitous in database applications, and yet our understanding of it is still rather basic. 
Since an incomplete database can represent multiple databases, query answering boils down to solving an entailment problem, while database systems are good at performing model-checking algorithms on first-order structures. Thus, to take advantage of them, we need to understand when entailment can be reduced to model-checking. We show that this happens for queries which are monotone with respect to the semantics of incompleteness, and that such monotonicity can be described via homomorphism preservation, for different notions of homomorphisms. Combining the latter with preservation theorems from logic (existing as well as new), we obtain classes of queries for which standard database systems can correctly compute answers over incomplete databases, or, logically speaking, for which entailment can be solved by simple model-checking.