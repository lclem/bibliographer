@inproceedings{10.1007/978-3-642-40213-5_8,
	Abstract = {Dynamic real-time systems, where the number of processes is not constant and new processes can be created on the fly like in object-based systems and ad-hoc networks, are still lacking a formal framework enabling their verification. Different toolboxes like Uppaal [21], Tina [10], Red [28] and Kronos [29] have been designed to deal with the modeling and analysis of real-time systems. Nevertheless, a shortcoming of these tools is that they can only describe static topologies. Other tools like Spin [18] allow the dynamic creation of processes, but do not consider time aspects. This paper presents a formal framework for modeling and verifying dynamic real-time systems. We introduce callable timed automata as a simple but powerful extension of standard timed automata in which processes may call each other. We show that the semantics of each call event can be interpreted either as an activation of the existing instance of the corresponding automaton (static instantiation), or a creation of a new concurrent instance (dynamic instantiation). We explore both semantical interpretations, static and dynamic, and give for each one the motivation and benefits with illustrating examples. Finally, we report on experiments with a prototype tool, which translates (a subset of) callable timed automata to UPPAAL systems.},
	Address = {Berlin, Heidelberg},
	Author = {Boudjadar, Abdeldjalil and Vaandrager, Frits and Bodeveix, Jean-Paul and Filali, Mamoun},
	BookTitle = {Fundamentals of Software Engineering},
	Editor = {Arbab, Farhad and Sirjani, Marjan},
	File = {boudjadar\_12579 (0) (0) - a - a - k.pdf},
	ISBN = {978-3-642-40213-5},
	Pages = {111--132},
	Publisher = {Springer Berlin Heidelberg},
	Title = {Extending UPPAAL for the Modeling and Verification of Dynamic Real-Time Systems},
	Year = {2013},
	date-added = {2019-04-22 18:28:38 +0200},
	date-modified = {2019-04-22 18:28:38 +0200},
	doi = {10.1007/978-3-642-40213-5_8}
}
