
@Article{         bono200895,
  abstract      = {Intersection types are well known to type theorists mainly for two reasons. Firstly, they type all and only the strongly normalizable lambda terms. Secondly, the intersection type operator is a meta-level operator, that is, there is no direct logical counterpart in the Curry--Howard isomorphism sense. In particular, its meta-level nature implies that it does not correspond to the intuitionistic conjunction. The intersection type system is naturally a type inference system (system {\`a} la Curry), but the meta-level nature of the intersection operator does not allow to easily design an equivalent typed system (system {\`a} la Church). There are many proposals in the literature to design such systems, but none of them gives an entirely satisfactory answer to the problem. In this paper, we will review the main results in the literature both on the logical interpretation of intersection types and on proposed typed lambda calculi. The core of this paper is a new proposal for a true intersection typed lambda calculus, without any meta-level notion. Namely, any typable term (in the intersection type inference) has a corresponding typed term (which is the same as the untyped term by erasing the type decorations and the typed term constructors) with the same type, and vice versa. The main idea is to introduce a relevant parallel term constructor which corresponds to the intersection type constructor, in such a way that terms in parallel share the same resources, that is, the same context of free typed variables. Three rules allow us to generate all typed terms. The first two rules, Application and Lambda-abstraction, are performed on all the components of a parallel term in a synchronized way. Finally, via the third rule of Local Renaming, once a free typed variable is bounded by lambda-abstraction, each of the terms in parallel can do its local renaming, with type refinement, of that particular resource. },
  author        = {Viviana Bono and Betti Venneri and Lorenzo Bettini},
  date-added    = {2014-09-08 08:12:11 +0000},
  date-modified = {2014-09-08 08:12:11 +0000},
  doi           = {http://dx.doi.org/10.1016/j.tcs.2008.01.046},
  issn          = {0304-3975},
  journal       = {Theoretical Computer Science},
  keywords      = {Shared resources},
  note          = {Calculi, Types and Applications: Essays in honour of M. Coppo, M. Dezani-Ciancaglini and S. Ronchi Della Rocca},
  number        = {1--3},
  pages         = {95 - 113},
  title         = {A typed lambda calculus with intersection types},
  url           = {http://www.sciencedirect.com/science/article/pii/S0304397508000625},
  volume        = {398},
  year          = {2008},
  bdsk-file-1   = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBgQSB0eXBlZCBsYW1iZGEgY2FsY3VsdXMgd2l0aCBpbnRlcnNlY3Rpb24gdHlwZXMgLSBCb25vLCBWZW5uZXJpLCBCZXR0aW5pICgwKSAoMCkgLSBhIC0gYSAtIG8ucGRmTxECcgAAAAACcgACAAADRVhUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////H0EgdHlwZWQgbGFtYmRhIGNhbCNGRkZGRkZGRi5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAAAAQACAAAKAHhGAAAAAAAAAAAAAAAAAAhBcnRpY2xlcwACAHcvOlZvbHVtZXM6RVhUOkFydGljbGVzOkEgdHlwZWQgbGFtYmRhIGNhbGN1bHVzIHdpdGggaW50ZXJzZWN0aW9uIHR5cGVzIC0gQm9ubywgVmVubmVyaSwgQmV0dGluaSAoMCkgKDApIC0gYSAtIGEgLSBvLnBkZgAADgDCAGAAQQAgAHQAeQBwAGUAZAAgAGwAYQBtAGIAZABhACAAYwBhAGwAYwB1AGwAdQBzACAAdwBpAHQAaAAgAGkAbgB0AGUAcgBzAGUAYwB0AGkAbwBuACAAdAB5AHAAZQBzACAALQAgAEIAbwBuAG8ALAAgAFYAZQBuAG4AZQByAGkALAAgAEIAZQB0AHQAaQBuAGkAIAAoADAAKQAgACgAMAApACAALQAgAGEAIAAtACAAYQAgAC0AIABvAC4AcABkAGYADwAIAAMARQBYAFQAEgBqL0FydGljbGVzL0EgdHlwZWQgbGFtYmRhIGNhbGN1bHVzIHdpdGggaW50ZXJzZWN0aW9uIHR5cGVzIC0gQm9ubywgVmVubmVyaSwgQmV0dGluaSAoMCkgKDApIC0gYSAtIGEgLSBvLnBkZgATAAwvVm9sdW1lcy9FWFT//wAAAAgADQAaACQAhwAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAL9},
  bdsk-url-1    = {http://www.sciencedirect.com/science/article/pii/S0304397508000625},
  bdsk-url-2    = {http://dx.doi.org/10.1016/j.tcs.2008.01.046}
}
